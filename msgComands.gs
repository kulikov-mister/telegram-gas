function msgComands(TelegramJSON) {
  let text = TelegramJSON.message.text;
  let chatid = TelegramJSON.message.chat.id;
  let userProperties = PropertiesService.getUserProperties();
  let msg, msg2 = '';
  
  
  if (text === '/addme'){
    if(Bot.getSystemUser() && Bot.getSystemUser().isAuth) {
      let msg = "–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.";
      Bot.sendMessage(msg);
      return;
    }
    if(Bot.getSystemUser()) {
      let msg = "–í—ã —É–∂–µ –¥–µ–ª–∞–ª–∏ –∑–∞–ø—Ä–æ—Å —Ä–∞–Ω—å—à–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.";
      Bot.sendMessage(msg);
      return;
    }
    Bot.addSystemUser();
    msg = "–í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.";
    Bot.sendMessage(msg);
    // –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
    let sendTo = superAdmin || Bot.getAdminsID();
    const len = sendTo.length;
    for(let i = 0; i < len; i++) {
      let options = {
        'chat_id': sendTo[i],
        'reply_markup': {
          'inline_keyboard': [
            [ 
              { 'text': '‚õîÔ∏è–û—Ç–∫–ª–æ–Ω–∏—Ç—å', 'callback_data': 'user_deny_' + Bot.getUserID() },
              { 'text': '‚úÖ–ü—Ä–∏–Ω—è—Ç—å', 'callback_data': 'user_approve_' + Bot.getUserID() }
            ]
          ]
        }
      };

      msg1 = "–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –≤–∞—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ\n\n" +
            "<i>ID        :</i> " + "<a href='" + Bot.mentionByID() +"'>" + Bot.getUserID() + "</a>\n" +
            "<i>Username  :</i> " + "<a href='" + Bot.mentionByID() +"'>" + Bot.getUsername() + "</a>\n" +
            "<i>First Name:</i> " + Bot.getUserFirstName() + "\n" +
            "<i>Last Name :</i> " + Bot.getUserLastName() + "\n" +
            "<i>Language  :</i> " + TelegramJSON.message.from.language_code + "\n" +
            "<i>Is bot    :</i> " + TelegramJSON.message.from.is_bot;
      Bot.sendMessage(msg1, options);
      return;
    }
  }

  if (text === '/privacy') {
    Bot.sendMessage(privacy_msg);
    return;
  }

  if (Bot.getSystemUser().isAuth || superAdmin.includes(chatid)) {
    
    let userData = JSON.parse(userProperties.getProperty(chatid));
    
    if (text === '/test') {
      Bot.sendMessage(userData.callback_query_data);
      Bot.sendMessage(search_row(userData.callback_query_data.split('_')[1], 'Test', 1));
      return;
    }
    
    if (text === '/cancel') { // –æ—Ç–º–µ–Ω–∞ –æ–ø–µ—Ä–∞—Ü–∏–π
      
      if (userData.callback_query_data.includes('sendoc')) { //–µ—Å–ª–∏ –æ—Ç–º–µ–Ω–∞ –≤ –º–µ–Ω—é –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã
        return;
      }
    }

    if (text === '/test2') {
      let users = Sheet('users').getRange(2, 2, Sheet('users').getLastRow(), 9).getValues();
      msg = text +'\n<b>–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –æ—Ç–¥–µ–ª –æ–ø–µ–∫–∏ –≥.–£—Ñ–∞</b>';
      Bot.sendMessage(userData.callback_query_data.split('_')[1]);
      Bot.sendMessage(users[1][8]);
      for (i in users) {
        if (users[i][8] === userData.callback_query_data.split('_')[1]){
          Bot.sendMessageTo(users[i][0], msg);
        }
      }
      return;
    }

    userProperties.deleteProperty(chatid);
    if (text === '/start') {
      if (superAdmin.includes(chatid)) {
        msg = "<b>–ü—Ä–∏–≤–µ—Ç, –ë–æ—Å—Å! –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –ú–ï–ù–Æ:</b>\n\n<i>–≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞.</i>";
        Bot.sendMessage(msg, {'reply_markup': {'inline_keyboard': menu[2]} } );
      }
      else{
        msg = "<b>–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –ú–ï–ù–Æ:</b>\n\n<i>–≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞.</i>";
        if (getSheetVal('users', search_row(chatid, 'users', 2), 9) === ''){// –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –ø—É—Å—Ç–æ–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
          Bot.sendMessage(msg, {'reply_markup': {'inline_keyboard': menu[0]}});
        }
        else{
          Bot.sendMessage(msg, {'reply_markup': {'inline_keyboard': menu[0].slice(2)}});
        }
      }
      return;
    }

    
    if (text === '/send_rules' && superAdmin.includes(chatid) ) {
      const groupId = getSheetVal('Settings', 7, 2); 
      if(groupId){
        Bot.sendMessageTo(`@${groupId}`, rules, {'reply_markup': {'inline_keyboard': menu[6]}});
        return;
      }
      else{
        Bot.sendMessage('–î–æ–±–∞–≤—å—Ç–µ –∏–º—è –¥–ª—è –≥—Ä—É–ø–ø—ã –≤ –ª–∏—Å—Ç–µ Settings');
        return;
      }
    }

    if (text === '/help') {
      let msg = "<b><a href='" + Bot.mentionByID() +"'>" + Bot.getUserFullName() + "</a>, –≤–∑–≥–ª—è–Ω–∏ –Ω–∞ –∫–æ–º–∞–Ω–¥—ã:</b>\n\n /start - –ó–∞–ø—É—Å—Ç–∏—Ç—å –±–æ—Ç–∞üî• \n /donate - –î–æ–Ω–∞—Ç‚ù§Ô∏è \n /profile - –ø—Ä–æ—Ñ–∏–ª—å \n /addme - –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é \n /rate - –ø–æ—Å—Ç–∞–≤–∏—Ç—å —Ä–µ–π—Ç–∏–Ω–≥üíπ \n /privacy - –∫–∞–∫–∏–µ –¥–∞–Ω–Ω—ã–µ –∏—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è \n /cancel - –æ—Ç–º–µ–Ω–∞";
      Bot.sendMessage(msg);
      return;
    }
    
    if (text === '/donate') {
      Bot.sendMessage(msgd);
      return;
    }

    if (text === '/top') {//–∫–æ–º–∞–Ω–¥–∞ –¥–ª—è —Ç–æ–ø–ª–∏—Å—Ç–∞
      if (leaderBoard()) {
        let msg = leaderBoard();
        Bot.sendMessage(msg);
      }
      else{
        Bot.sendMessage("–°–ø–∏—Å–æ–∫ —Å–∞–º—ã—Ö –∞–∫—Ç–∏–≤–Ω—ã—Ö –ø—É—Å—Ç!");
      }
      return;
    }

    if (text === '/profile'){
      msg = "<b>ID        :</b> " + Bot.getUserID() + "\n" +
            "<b>Username  :</b> " + "<a href='" + Bot.mentionByID() +"'>" + Bot.getUsername() + "</a>\n" +
            "<b>First Name:</b> " + Bot.getUserFirstName() + "\n" +
            "<b>Last Name :</b> " + Bot.getUserLastName() + "\n" +
            "<b>Language  :</b> " + TelegramJSON.message.from.language_code + "\n" +
            "<b>Is bot    :</b> " + TelegramJSON.message.from.is_bot;
      Bot.sendMessage(msg);
      return;
    }

    if (text === '/addme'){
      if(Bot.getSystemUser() && Bot.getSystemUser().isAuth) {
        let msg = "–í—ã —É–∂–µ —è–≤–ª—è–µ—Ç–µ—Å—å –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º.";
        Bot.sendMessage(msg);
        return;
      }
      if(Bot.getSystemUser()) {
        let msg = "–í—ã —É–∂–µ –¥–µ–ª–∞–ª–∏ –∑–∞–ø—Ä–æ—Å —Ä–∞–Ω—å—à–µ. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –¥–æ–∂–¥–∏—Ç–µ—Å—å –æ—Ç–≤–µ—Ç–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.";
        Bot.sendMessage(msg);
        return;
      }
      Bot.addSystemUser();
      msg = "–í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.";
      Bot.sendMessage(msg);
      // –æ—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∑–∞–ø—Ä–æ—Å–æ–º –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º
      let sendTo = superAdmin || Bot.getAdminsID();
      const len = sendTo.length;
      for(let i = 0; i < len; i++) {
        let options = {
          'chat_id': sendTo[i],
          'reply_markup': {
            'inline_keyboard': [
              [ 
                { 'text': '‚õîÔ∏è–û—Ç–∫–ª–æ–Ω–∏—Ç—å', 'callback_data': 'user_deny_' + Bot.getUserID() },
                { 'text': '‚úÖ–ü—Ä–∏–Ω—è—Ç—å', 'callback_data': 'user_approve_' + Bot.getUserID() }
              ]
            ]
          }
        };

        msg1 = "–≠—Ç–æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ—Ç —É –≤–∞—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–µ\n\n" +
              "<i>ID        :</i> " + "<a href='" + Bot.mentionByID() +"'>" + Bot.getUserID() + "</a>\n" +
              "<i>Username  :</i> " + "<a href='" + Bot.mentionByID() +"'>" + Bot.getUsername() + "</a>\n" +
              "<i>First Name:</i> " + Bot.getUserFirstName() + "\n" +
              "<i>Last Name :</i> " + Bot.getUserLastName() + "\n" +
              "<i>Language  :</i> " + TelegramJSON.message.from.language_code + "\n" +
              "<i>Is bot    :</i> " + TelegramJSON.message.from.is_bot;
        Bot.sendMessage(msg1, options);
        return;
      }
    }

    if (text === '/rate'){
      let keyboard = ['‚≠êÔ∏è','‚≠êÔ∏è‚≠êÔ∏è','‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è','‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è','‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è‚≠êÔ∏è'];
      msg = "–ö–∞–∫ –≤—ã –æ—Ü–µ–Ω–∏–≤–∞–µ—Ç–µ —ç—Ç–æ–≥–æ –±–æ—Ç–∞?";
      Bot.sendMessageCustomKeyboard(msg, keyboard, '–î–∞–π—Ç–µ –º–Ω–µ —Å–≤–æ–∏ –∑–≤–µ–∑–¥—ã...');
      return;
    }
  }
  else {//–µ—Å–ª–∏ –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å
    let msg = "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. \n<i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /addme, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.</i>";
    Bot.sendMessage(msg);
    return;
  }
}