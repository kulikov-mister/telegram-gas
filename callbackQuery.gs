function callbackQuery(TelegramJSON) {//–æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π –≤ –ª–∏—á–Ω–æ–º —á–∞—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  let cb = TelegramJSON.callback_query;
  let options = {
    chat_id: cb.message.chat.id,
    message_id: cb.message.message_id,
    data: cb.data,
    parse_mode: 'HTML',
    disable_web_page_preview: true,
    disable_notification: true,
    text: '' || cb.message.text,
    reply_markup: '',
  }
  let userProperties = PropertiesService.getUserProperties();
  let userData = JSON.parse(userProperties.getProperty(options.chat_id));
  let msg, msg2 = '';

  if (Bot.getSystemUser() && Bot.getSystemUser().isAuth || superAdmin.includes(options.chat_id)) { // –æ—Å—Ç–∞–ª—å–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π

    if (options.data === 'menu_start') {
      userProperties.deleteProperty(options.chat_id);
      if (Bot.getSystemUser().isAdmin || superAdmin.includes(options.chat_id)) {//–µ—Å–ª–∏ –∞–¥–º–∏–Ω –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç—Å—è –≤ –º–µ–Ω—é
        Bot.sendChatAction();
        msg = "<b>–ü—Ä–∏–≤–µ—Ç, –ë–æ—Å—Å! –í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –ú–ï–ù–Æ:</b>\n\n<i>–≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞.</i>";
        Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[2]});
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      }
      else{
        let ind = search_row(options.chat_id, 'users', 2); //–∏–Ω–¥–µ–∫—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        Bot.sendChatAction();
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
        msg = "<b>–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –ú–ï–ù–Æ:</b>\n\n<i>–≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞.</i>";
        
        if (getSheetVal('users', ind, 9) === '') {// –µ—Å–ª–∏ —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏ –ø—É—Å—Ç–æ–π, –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç—Å—è –ø–æ–ª–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞
          Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[0]});
        }
        else{
          Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[0].slice(2)});
        }
      }
      return;
    }

    if (options.data === 'stop') {
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –î–∞–ª—å—à–µ –ø—É—Å—Ç–æ' });
      return;
    }

    if (options.data === 'Hotlines'){
      Bot.sendChatAction();
      if(hotlines_msg !== ''){ //–µ—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–º–µ–µ—Ç—Å—è
        Bot.editMessageKeyboard(hotlines_msg, options.message_id, null, {"inline_keyboard": [[{text: 'üè° –ù–∞–∑–∞–¥', callback_data: 'menu_start'}]] });
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      }
      else{
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –¢–µ–ª–µ—Ñ–æ–Ω—ã –¥–æ–≤–µ—Ä–∏—è –æ—Ç—Å—É—Ç—Å–≤—É—é—Ç!'});
      }
      return;
    }

    if (options.data === 'Information'){
      Bot.sendChatAction();
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id });
      Bot.editMessageKeyboard('<b>‚ÑπÔ∏è –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è</b>', options.message_id, null, {"inline_keyboard": menu[3] });
      return;
    }

    if (options.data === 'MoreInfo'){ //–î–æ–ø –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
      Bot.sendChatAction();
      if (Bot.getSystemUser().isAdmin || superAdmin.includes(options.chat_id)) {
        try{
          Bot.editMessageKeyboard(getInfoValues(), options.message_id, null, {"inline_keyboard": [[{text: 'üè° –ù–∞–∑–∞–¥', callback_data: 'Information'}]] });
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id });
        }
        catch{
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å–≤—É—é—Ç!'});
        }
        return;
      }
      else{
        try{
          Bot.editMessageKeyboard(getInfoValues(), options.message_id, null, {"inline_keyboard": [[{text: 'üè° –ù–∞–∑–∞–¥', callback_data: 'menu_start'}]] });
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id });
        }
        catch{
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å–≤—É—é—Ç!'});
        }
        return;
      }
    }

    if (options.data === 'Articles'){ // –∞—Ä—Ö–∏–≤ —Å—Ç–∞—Ç–µ–π
      Bot.sendChatAction();
      try{
        Bot.editMessageKeyboard('üóÇÔ∏è <b>–ê—Ä—Ö–∏–≤ —Å—Ç–∞—Ç–µ–π</b>\n'+getInfoArticles(), options.message_id, null, {"inline_keyboard": [[{text: 'üè° –ù–∞–∑–∞–¥', callback_data: 'Information'}]] });
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id });
      }
      catch{
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –î–∞–Ω–Ω—ã–µ –æ—Ç—Å—É—Ç—Å–≤—É—é—Ç!'});
      }
      return;
    }

    if (options.data === 'schedule'){ //—Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
      Bot.sendChatAction();
      if(schedule_msg !== ''){ //–µ—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–º–µ–µ—Ç—Å—è
        msg = '–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Ä–∞–±–æ—Ç—ãüóí';
        try{
          Bot.editMessageKeyboard(msg, options.message_id, null, {"inline_keyboard": [[{ text: '–û—Ç–∫—Ä—ã—Ç—å', url: schedule_msg }],[{text: 'üè° –ù–∞–∑–∞–¥', callback_data: 'menu_start'}]] });
        }
        catch{
          Bot.editMessageKeyboard(schedule_msg, options.message_id, null, {"inline_keyboard": [[{text: 'üè° –ù–∞–∑–∞–¥', callback_data: 'menu_start'}]] });
        }
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      }
      else{
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç!'});
      }
      return;
    }

    

    if (options.data === 'loading') { //–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—è–≤–∫–∏
      Bot.sendChatAction();
      let ind = search_row(options.chat_id, 'users', 2)
      if (ind == undefined){ //–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!'});
      }
      else{
        let data = getSheetValue('users', ind, 9);
        if (data != ''){ //–µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—è–≤–∫–∏ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤—É–µ—Ç
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id });
          Bot.editMessageKeyboard(`<b>C–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—è–≤–∫–∏:</b> ${String(data)}`, options.message_id, null, {'inline_keyboard': menu[1]});
        }
        else{ //–µ—Å–ª–∏ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∑–∞—è–≤–∫–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚ö†Ô∏è –î–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–æ—Å—å!'});
        }
      }
      return;
    }

    if (options.data === 'sendWait') {//–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Ö–æ—á–µ—Ç –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É
      Bot.sendChatAction();
      let ind = search_row(options.chat_id, 'users', 2); //–∏–Ω–¥–µ–∫—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      if (ind == undefined){ //–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚ö†Ô∏è –í—ã –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã!'});
      }
      else{
        if (getSheetVal('users', ind, 9) === '') {//–µ—Å–ª–∏ –∑–∞—è–≤–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∞—Å—å
          let category = getSheetVal('users', ind, 10);//–∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –Ω–∞–∑–≤–∞–Ω–∏–µ
          if (category){
            let indCategory = search_row(category, 'Test', 1); 
            let a = Sheet('users').getRange(1, 11, 1, Sheet('users').getLastColumn()-10).getValues().flat();//–Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            let b = Sheet('Test').getRange(indCategory, 2, 1, Sheet('Test').getLastColumn()-1).getValues().flat();//—Å–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            let c = Sheet('users').getRange(ind, 11, 1, Sheet('users').getLastColumn()-10).getValues().flat();//–º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            const categoriesArr = b //–Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
              .filter(document => document.includes('‚úÖ'))
              .map(document => document.slice(2))

            let arr = [];
            for (let i = 0; i < c.length; i++) {//—Å–ø–∏—Å–æ–∫ –∏–º–µ—é—â–∏—Ö—Å—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              if (c[i]){ //–µ—Å–ª–∏ –Ω–µ—Ç –∫–∞–∫–æ–≥–æ-—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
                arr.push(a[i]);
              }
            }

            const diff = function (a1, a2) {//—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–≤
              return a1.filter(doc => !a2.includes(doc))
            }

            const diffCategories = diff(categoriesArr, arr);//—Å–ø–∏—Å–æ–∫ —Å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏

            if (diffCategories.length) {
              Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–ü—Ä–æ—á—Ç–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!'});
              msg = `<b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.\n\n<i>–ï—Å–ª–∏ —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ:</i> <b>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</b>`;
              Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[10]});
            }
            else{
              Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–ü—Ä–æ—á—Ç–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ!'});
              msg = `<b>–í–Ω–∏–º–∞–Ω–∏–µ:</b> –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É, –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∏–∑–º–µ–Ω—è—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –±—É–¥–µ—Ç –∑–∞–±–ª–æ–∫–∏—Ä–æ–≤–∞–Ω–∞.\n\n<i>–ï—Å–ª–∏ —Å–æ–≥–ª–∞—Å–Ω—ã, –Ω–∞–∂–º–∏—Ç–µ:</i> <b>–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å</b>`;
              Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[11]});
            }
          }

          else{
            Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!'});
            msg = `<b>–ü—Ä–µ–∂–¥–µ, —á–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n\n1.</b> –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫ –∫–æ—Ç–æ—Ä–æ–π –í—ã –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç–µ;\n<b>2.</b> –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã;\n<b>3.</b> –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.`
            keys = [[{'text': '‚ú≥Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', 'callback_data': `newCategory`}],
                    [{'text': 'üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã', 'callback_data': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã'}],
                    [{'text': 'üè° –ù–∞–∑–∞–¥', 'callback_data': 'menu_start'}]];
            Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': keys});
          }
        }
      return;
      }
    }

    if (options.data === 'waiting') { //–æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞—è–≤–∫–∏
      Bot.sendChatAction();
      let ind = search_row(options.chat_id, 'users', 2); //–∏–Ω–¥–µ–∫—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
        
        if (getSheetVal('users', ind, 9) === '') {//–µ—Å–ª–∏ –∑–∞—è–≤–∫–∞ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∞—Å—å
          let category = getSheetVal('users', ind, 10);//–∫–∞—Ç–µ–≥–æ—Ä–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è - –Ω–∞–∑–≤–∞–Ω–∏–µ
          if (category){
            let indCategory = search_row(category, 'Test', 1); 
            let a = Sheet('users').getRange(1, 11, 1, Sheet('users').getLastColumn()-10).getValues().flat();//–Ω–∞–∑–≤–∞–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π
            let b = Sheet('Test').getRange(indCategory, 2, 1, Sheet('Test').getLastColumn()-1).getValues().flat();//—Å–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
            let c = Sheet('users').getRange(ind, 11, 1, Sheet('users').getLastColumn()-10).getValues().flat();//–º–∞—Å—Å–∏–≤ —Å –¥–∞–Ω–Ω—ã–º–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

            const categoriesArr = b //–Ω–æ–≤—ã–π —Å–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
              .filter(document => document.includes('‚úÖ'))
              .map(document => document.slice(2))

            let arr = [];
            for (let i = 0; i < c.length; i++) {//—Å–ø–∏—Å–æ–∫ –∏–º–µ—é—â–∏—Ö—Å—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ —É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
              if (c[i]){ //–µ—Å–ª–∏ –Ω–µ—Ç –∫–∞–∫–æ–≥–æ-—Ç–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
                arr.push(a[i]);
              }
            }

            const diff = function (a1, a2) {//—Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –¥–≤—É—Ö –º–∞—Å—Å–∏–≤–æ–≤
              return a1.filter(doc => !a2.includes(doc))
            }

            const diffCategories = diff(categoriesArr, arr);//—Å–ø–∏—Å–æ–∫ —Å –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–º–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏

            if (diffCategories.length) {//–µ—Å–ª–∏ –∏–º–µ—é—Ç—Å—è –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã
              Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚ö†Ô∏è –ù–µ —Ö–≤–∞—Ç–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤!'});
              msg = '<b>–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Å–ª–µ–¥—É—é—â–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:</b> \n'
              for (let i = 0; i < diffCategories.length; i++) {msg += `<b>${i+1}.</b> ${diffCategories[i]}\n`};//—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
              Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[9]});
            }

            else{
              Bot.request('answerCallbackQuery', { callback_query_id: cb.id });
              setSheetVal('users', ind, 9, '–ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞');
              msg = `<b>‚úÖ –í–∞—à–∞ –∑–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!</b><i>\n–ö–æ–≥–¥–∞ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏—Ç—Å—è, –í–∞–º –ø—Ä–∏–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ!</i>`;
              Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[1]});
              msg2 = "<b>–ë–æ—Å—Å, –Ω–æ–≤–∞—è –∑–∞—è–≤–∫–∞ –æ—Ç " + "<a href='" + Bot.mentionByID() +"'>" + Bot.getUserFullName() + "</a></b>";
              let key = [[{'text': 'üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏', 'callback_data': `setStatus_${options.chat_id}` }],
                        [{'text': 'üìÑ –í—ã–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã', 'callback_data': `DownloadDocs_${options.chat_id}` }],
                        [{'text': '‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', 'callback_data': `sendmsg_${options.chat_id}`}]];
              Bot.sendMessageTo(superAdmin[0], msg2, {'reply_markup': {'inline_keyboard': key}});
            }
          }

          else{
            Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚ö†Ô∏è –ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!'});
            msg = `<b>–ü—Ä–µ–∂–¥–µ, —á–µ–º –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ:\n\n1.</b> –í—ã–±—Ä–∞—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫ –∫–æ—Ç–æ—Ä–æ–π –í—ã –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–∏—Ç–µ;\n<b>2.</b> –ó–∞–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã;\n<b>3.</b> –ü–æ–≤—Ç–æ—Ä–Ω–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞—è–≤–∫—É –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É.`
            keys = [[{'text': '‚ú≥Ô∏è –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é', 'callback_data': `newCategory`}],
                    [{'text': 'üì® –û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã', 'callback_data': '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã'}],
                    [{'text': 'üè° –ù–∞–∑–∞–¥', 'callback_data': 'menu_start'}]];
            Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': keys});
          }
        }

        else{//–µ—Å–ª–∏ –∑–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∞—Å—å —Ä–∞–Ω–µ–µ
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚ö†Ô∏è –ó–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∞—Å—å —Ä–∞–Ω–µ–µ!'});
          msg = `<b>‚ö†Ô∏è –ó–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∞—Å—å —Ä–∞–Ω–µ–µ!</b> \n<i>–ë—É–¥—å—Ç–µ —Ç–µ—Ä–ø–µ–ª–∏–≤—ã, –í–∞—à–∞ –∑–∞—è–≤–∫–∞ —É–∂–µ –Ω–∞ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ–Ω–∏–∏.\n–ö–æ–≥–¥–∞ —Å—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–∏—Ç—Å—è, –í–∞–º –ø—Ä–∏–¥—ë—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ!</i>`;
          Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[1]});
        }
      return;
    }

    if (options.data === 'Instructions') {
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'üìã –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏'});
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
      let data = getDataColumnSheet('Instructions');
      msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é —Å—Ç–∞—Ç—å—é –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞ </b>üëá';
      try{
        Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(data, undefined, return_key = "Information").keyboard); 
        return;
      }
      catch{//–µ—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∞–µ—Ç—Å—è –∏–∑–º–µ–Ω–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è –≤–æ–∑–≤—Ä–∞—Ç–∞ –Ω–∞–∑–∞–¥
        Bot.deleteMessage(options.message_id);
        Bot.sendMessage(msg, {'reply_markup': keySheets(data, undefined, return_key = "Information").keyboard});
        return;
      }
    }

    if (options.data === '–£–¥–∞–ª–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª' || options.data === '–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª' || options.data === '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã') {
      let user = {callback_query_data: options.data};
      if (options.data === '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã') {
        let data = getDataUsers();
        if(data.length > 0){//–ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –Ω–∞–ª–∏—á–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
          msg = msg = '<b>–í—ã–±–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å</b>üëá';
          userProperties.setProperty(options.chat_id, JSON.stringify(user));
          Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(getDataUsers(), undefined).keyboard);
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
        }
        else{
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –ó–¥–µ—Å—å –ø—É—Å—Ç–æ!' });
        }
        return;
      }

      if (options.data === '–î–æ–±–∞–≤–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª') {
        userProperties.setProperty(options.chat_id, JSON.stringify(user));
        Bot.editMessageText('<b>–ü—Ä–∏—à–ª–∏—Ç–µ –í–∞—à –Ω–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª.</b>', options.message_id);
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      }

      if (options.data === '–£–¥–∞–ª–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª') {
        let data = getDataColumnSheet('Instructions');
        msg = '–í—ã–±–µ—Ä–∏ –ø—Ä–µ–¥–º–µ—Ç, –≤ –∫–æ—Ç–æ—Ä–æ–º –í—ã —Ö–æ—Ç–∏—Ç–µ <b>—É–¥–∞–ª–∏—Ç—å</b> –º–∞—Ç–µ—Ä–∏–∞–ªüëá';
        userProperties.setProperty(options.chat_id, JSON.stringify(user));
        Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(data, undefined, return_key = "menu_start").keyboard);
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      }
      else{
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –ó–¥–µ—Å—å –ø—É—Å—Ç–æ!' });
      }
      return;       
    }

    if (Bot.getUsersID().includes(+options.data)) {//–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —é–∑–µ—Ä –∏–∑ —Å–ø–∏—Å–∫–∞
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–ó–∞–≥—Ä—É–∂–∞—é —Å–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π' });
      let keys = [[{'text': 'üîÑ –ò–∑–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏', 'callback_data': `setStatus_${+options.data}` }],
                  [{'text': 'üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞—è–≤–∫–∏', 'callback_data': `delStatus_${+options.data}` }],
                  [{'text': 'üìÑ –í—ã–≥—Ä—É–∑–∏—Ç—å –≤—Å–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã', 'callback_data': `DownloadDocs_${+options.data}` }],
                  [{'text': '‚úâÔ∏è –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ', 'callback_data': `sendmsg_${options.data}`}],
                  [{'text': 'üè° –ù–∞–∑–∞–¥', 'callback_data': '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã'}]];
      msg = Bot.getSystemUser(options.data).firstName +' '+ Bot.getSystemUser(options.data).lastName
      Bot.editMessageKeyboard(`<b>${msg}</b>` , options.message_id, null, {'inline_keyboard': keys});
      return;
    }

    if (options.data === '–î–æ–±–∞–≤–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é') {
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏' });
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
      Bot.editMessageText('<b>–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è –í–∞—à–µ–π –Ω–æ–≤–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.</b>', options.message_id);
      return;
    }

    if (options.data === '–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é') {
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
      if (getSheetVal('Test', 1, 1)) {
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!' });
        let categories = getDataColumnSheet('Test');
        msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å</b>üëá'
        Bot.editMessageKeyboard( msg, options.message_id, null, keySheets(categories, undefined, return_key = "Functions").keyboard);
        return;
      }
      else{
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –ö–∞—Ç–µ–≥–æ—Ä–∏–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç!' });
        return;
      }
    }

    if (options.data === '–î–æ–±–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç') {
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞' });
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
      Bot.editMessageText('<b>–ù–∞–ø–∏—à–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–æ–≤–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞.</b>', options.message_id);
      return;
    }

    if (options.data.split('_')[0] === 'sendmsg') { //–æ—Ç–ø—Ä–∞–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é'});
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
      msg = '<b>–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤—Ç–∞—Ç–µ–ª—é.</b>üëá';
      Bot.sendMessage(msg);
      return;
    }

    if (options.data === 'sendmsgAdmin') { //–æ—Ç–ø—Ä–∞–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É' });
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
      msg = '<b>–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É.</b>üëá';
      Bot.editMessageKeyboard( msg, options.message_id, null, {'inline_keyboard': [[{'text': 'üè° –ù–∞–∑–∞–¥', 'callback_data': 'menu_start'}]]});
      return;
    }

    if (options.data === 'sendAllmsg') { //–æ—Ç–ø—Ä–∞–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º' });
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
      msg = '<b>–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤—Ç–∞—Ç–µ–ª—è–º.</b>üëá';
      Bot.editMessageKeyboard( msg, options.message_id, null, {'inline_keyboard': [[{'text': 'üè° –ù–∞–∑–∞–¥', 'callback_data': 'sendmsg'}]]});
      return;
    }

    if (options.data === 'sendAllmsgTo') { //–æ—Ç–ø—Ä–∞–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –∏–º–µ–Ω–∏ –±–æ—Ç–∞ –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—éüëá' });
      let categories = getDataColumnSheet('Test');
      msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ.</b>';
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: `sendAllmsgTo`}));
      Bot.editMessageKeyboard( msg, options.message_id, null, keySheets(categories, undefined, return_key = "sendmsg").keyboard);
      return;
    }

              /*                          –ê–î–ú–ò–ù–ò–°–¢–†–ê–¢–û–†–°–ö–ò–ï –§–£–ù–ö–¶–ò–ò                           */

    if(options.data === 'Functions') {
      Bot.sendChatAction();
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      msg = "<b>–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –ú–ï–ù–Æ:</b>\n\n<i>–≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞.</i>";
      Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[8]});
      return;
    }

    if (options.data === '–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'){
      let user = {
        callback_query_data: '–î–æ–±–∞–≤–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ',
      };
      userProperties.setProperty(options.chat_id, JSON.stringify(user));
      Bot.editMessageKeyboard('<b>–ü—Ä–∏—à–ª–∏—Ç–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∏–ª–∏ –ø—Ä—è–º—É—é —Å—Å—ã–ª–∫—É –Ω–∞ –í–∞—à–µ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</b>', options.message_id, null, {'inline_keyboard': menu[1]});
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      return;
    }

    if (options.data === '–£–¥–∞–ª–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ'){
      if (schedule_msg.trim() == '') { //–µ—Å–ª–∏ —Å—Å—ã–ª–∫–∞ –¥–ª—è —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è –∏–º–µ–µ—Ç—Å—è
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚ö†Ô∏è –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –æ—Ç—Å—É—Ç—Å–≤—É–µ—Ç!'});
      }
      else {
        setSheetVal('Settings', 2, 2, '');//—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤ –≥—Ä–∞—Ñ—É —Å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º –ø—É—Å—Ç–æ–≥–æ –∑–Ω–∞—á–µ–Ω–∏—è
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚úÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ!'});
      }
      return;
    }

    if (options.data.includes('setStatus')) {
      Bot.sendChatAction();
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å' });
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
      msg = '<b>–ë–æ—Å—Å, –≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞.</b>';
      keys = getDataColumnSheet('Settings', row=2,col=4);
      Bot.sendMessageCustomKeyboard(msg, keys, '–ë–æ—Å—Å, –≤—ã–±–µ—Ä–∏ —Å—Ç–∞—Ç—É—Å!');
      return;
    }

    if (options.data.includes('delStatus')) {
      Bot.sendChatAction();
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∞—Ç—É—Å' });
      let ind = search_row(userData.callback_query_data.split('_')[1], 'users', 2);
      msg = '‚úÖ<b>C—Ç–∞—Ç—É—Å —É—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω—ë–Ω.</b> \n\n<i>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /start, —á—Ç–æ–±—ã —Å–Ω–æ–≤–∞ –ø–µ—Ä–µ–π—Ç–∏ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</i>';
      Bot.sendMessage(msg);
      setSheetVal('users', ind, 9, '');
      msg2 = `‚úâÔ∏è<b>–°—Ç–∞—Ç—É—Å –í–∞—à–µ–π –∑–∞—è–≤–∫–∏ –æ–±–Ω–æ–≤–ª—ë–Ω:</b> \n<i>–¢–µ–∫—É—â–∏–π —Å—Ç–∞—Ç—É—Å:</i> <b>${text}\n\n–° —É–≤–∞–∂–µ–Ω–∏–µ–º, –æ—Ç–¥–µ–ª –æ–ø–µ–∫–∏ –≥.–£—Ñ–∞</b>`;
      Bot.sendMessageTo(userData.callback_query_data.split('_')[1], msg2);
      return;
    }

    if (options.data.includes('newCategory')) {
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!' });
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: 'setCategory'}));
      msg = '<b>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞üëá</b>';
      let categories = getDataColumnSheet('Test');
      Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(categories, undefined, return_key = "menu_start").keyboard);
      return;
    }

    if (options.data === 'editDocs') { //–µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      Bot.sendChatAction();
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
      let categories = getDataColumnSheet('Test');//–∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –≤ –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã</b>üëá'
      Bot.editMessageKeyboard( msg, options.message_id, null, getkeys(categories, 2, return_key = "Functions"));
      return;
    }

    if (options.data === 'editDocsSendAll') {//–æ—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –æ–± –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
      Bot.sendChatAction();
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      let category = userData.callback_query_data.split('_')[1];
      let users = getDataColumnSheet('users', 2, 2);
      let ind = search_row(category, 'Test', 1); //—Å—Ç—Ä–æ–∫–∞ —Å–æ—Ö—Ä–∞–Ω—ë–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ 
      let docs = getDataRowSheet('Test', ind, 2).filter(document => document.includes('‚úÖ'));//—Å–ø–∏—Å–æ–∫ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
      let txt = `‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ, —Å–ø–∏—Å–æ–∫ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏:<b> ${category}</b> –±—ã–ª –∏–∑–º–µ–Ω—ë–Ω!\n\n<b>–¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫:</b>\n`;
      for (i in docs) {txt+=`${docs[i]}\n`};
      for (i in users) {
        Bot.sendMessageTo(users[i], txt);
      }
      msg2 = `–ü—Ä–æ–∏–Ω—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–æ: <b>${+i+1}</b> –∏–∑ <b>${users.length}</b>`;
      Bot.sendMessage(msg2);
      return;
    }

    if (options.data >= 0) {//–∏–∑–º–µ–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
      Bot.sendChatAction();
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      if (userData.callback_query_data.includes('editDocs') ) {
        let ind = search_row(userData.callback_query_data.split('_')[1], 'Test', 1); //C—Ç—Ä–æ–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        let docs = getDataRowSheet('Test', ind, 2);
        if (docs[options.data].split(' ')[0] == '‚úÖ') {
          msg = docs[options.data].replace(/‚úÖ/, '‚ûñ')
        }
        else {
          msg = docs[options.data].replace(/‚ûñ/, '‚úÖ')
        }
        setSheetVal('Test', ind, +options.data+2, msg);
        docs = getDataRowSheet('Test', ind, 2);//–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π docs
        Bot.editMessageKeyboard(`–í–∞—à –í—ã–±–æ—Ä: <b>${msg}</b> —Å–æ—Ö—Ä–∞–Ω—ë–Ω!` , options.message_id, null,  getkeys(docs, 1, "Functions", `editDocsSendAll`));
        return;
      }
    }
    
    if (getDataColumnSheet('Test').includes(options.data)) { //–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è
      Bot.sendChatAction();
      if (userData.callback_query_data === 'editDocs') { //–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
        let ind = search_row(options.data, 'Test', 1); //C—Ç—Ä–æ–∫–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        let docs = getDataRowSheet('Test', ind, 2);
        msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç, –∫–æ—Ç–æ—Ä—ã–π –í—ã —Ö–æ—Ç–∏—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å</b>üëá'
        userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: `editDocs_${options.data}`}));
        Bot.editMessageKeyboard( msg, options.message_id, null, getkeys(docs, 1, "Functions", `editDocsSendAll`));
        return;
      }

      if (userData.callback_query_data === 'sendAllmsgTo') { //–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º' });
        msg = '<b>–ù–∞–ø–∏—à–∏—Ç–µ –í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –í—ã —Ö–æ—Ç–∏—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤—Ç–∞—Ç–µ–ª—è–º.</b>üëá';
        userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: `sendAllmsgTo_${options.data}`}));
        Bot.editMessageKeyboard( msg, options.message_id, null, {'inline_keyboard': [[{'text': 'üè° –ù–∞–∑–∞–¥', 'callback_data': 'sendmsg'}]]});
        return;
      }

      if (userData.callback_query_data === '–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é') { //–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è
        try{
          Sheet('Test').deleteRow(search_row(options.data, 'Test', 1));
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞!' });
          let categories = getDataColumnSheet('Test');
          msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å</b>üëá'
          Bot.editMessageKeyboard( msg, options.message_id, null, keySheets(categories, undefined, return_key = "Functions").keyboard);
        }
        catch{
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!' });  
        }
        return;
      }

      if (userData.callback_query_data === 'setCategory') { //–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏
        if (!superAdmin.includes(options.chat_id)){
          try {
            let ur = search_row(options.chat_id, 'users', 2);
            setSheetVal('users', ur, 10, options.data); //—É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
            Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚úÖ –ö–∞—Ç–µ–≥–æ—Ä–∏—è —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!'});
            userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã'}));
            msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞üëá</b>';
            Bot.editMessageKeyboard(msg, options.message_id, null, getkeyFlags(options.chat_id, return_key = "menu_start"));
            return
          }
          catch{
            Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: 'ü•∫ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!' });
            return;
          }
        }
        return;
      }
    }

     /*                          –†–ê–ë–û–¢–ê –° –î–û–ö–£–ú–ï–ù–¢–ê–ú–ò                           */

    if (options.data === '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã') { //–æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤

      let ind = search_row(options.chat_id, 'users', 2);//—Å—Ç—Ä–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ —Ç–∞–±–ª–∏—Ü–µ
      if (getSheetVal('users', ind, 9) !== '') {//–µ—Å–ª–∏ –∑–∞—è–≤–∫–∞ —É–∂–µ –æ—Ç–ø—Ä–∞–≤–ª—è–ª–∞—Å—å
        Bot.sendChatAction();
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '‚ö†Ô∏è –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∑–∞–ø—Ä–µ—â–µ–Ω–∞' });
        msg = "<b>–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –ú–ï–ù–Æ:</b>\n\n<i>–≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –≤–∞—Ä–∏–∞–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞.</i>";
        Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[0].slice(2)});
      }

      else{
        if (getSheetVal('users', ind, 10) !== '') {//–µ—Å–ª–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≥—Ä–∞–∂–¥–∞–Ω –≤ —Ç–∞–±–ª–∏—Ü–µ –∏–º–µ–µ—Ç—Å—è
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤' });
          userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: options.data}));
          msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞üëá</b>';
          Bot.editMessageKeyboard(msg, options.message_id, null, getkeyFlags(options.chat_id, return_key = "menu_start"));
          return;
        }
        else {//–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤—ã–±—Ä–∞–ª –∫–∞—Ç–µ–≥–æ—Ä–∏—é
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é!' });
          userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: 'setCategory'}));
          msg = '<b>–£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –∏–∑ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞üëá</b>';
          let categories = getDataColumnSheet('Test');
          Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(categories, undefined, return_key = "menu_start").keyboard);
          return;
        }
      }
    }

    let passlist = Sheet('Users').getRange(1, 11, 1, Sheet('Users').getLastColumn()-10).getValues().flat();
    if (passlist.includes(options.data)) { //–µ—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ —Å–ø–∏—Å–∫–∞
      
      if (userData.callback_query_data === '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã') {
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: `–û—Ç–ø—Ä–∞–≤—å—Ç–µ: ${options.data}`});
        userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: `sendoc_${options.data}`}));
        let ur = search_row(options.chat_id, 'users', 2);//—Å—Ç—Ä–æ–∫–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        let dcol = search_col(options.data, 'users', 1);//–∫–æ–ª–æ–Ω–∫–∞ –Ω–∞–¥–π–µ–Ω–Ω–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç–∞
        if (getSheetVal('users', ur, dcol) === '') {//–µ—Å–ª–∏ –¥–æ–∫—É–º–µ–Ω—Ç —É–∂–µ –∏–º–µ–µ—Ç—Å—è –≤ —Å–ø–∏—Å–∫–µ
          msg = '<b>–ü—Ä–∏—à–ª–∏—Ç–µ –í–∞—à –¥–æ–∫—É–º–µ–Ω—Ç –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏.</b> \n\n<i>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã</i> \n <b>| PDF | DOC | JPEG | JPG | PNG |</b>';
          let key = [[{ text: 'üè° –ù–∞–∑–∞–¥', callback_data: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã'}]];
          Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': key });
          return;
        }
        else{
          msg = '<b>–î–∞–Ω–Ω—ã–π –¥–æ–∫—É–º–µ–Ω—Ç —É–∂–µ –µ—Å—Ç—å –≤ —Å–∏—Å—Ç–µ–º–µ.</b> \n–ß—Ç–æ–±—ã –∑–∞–º–µ–Ω–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç, –ø—Ä–∏—à–ª–∏—Ç–µ –í–∞—à –Ω–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –≤ –æ—Ç–≤–µ—Ç–Ω–æ–º —Å–æ–æ–±—â–µ–Ω–∏–∏. \n\n<i>–ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è —Å–ª–µ–¥—É—é—â–∏–µ —Ñ–æ—Ä–º–∞—Ç—ã</i> \n <b>| PDF | DOC | JPEG | JPG | PNG |</b>';
          let key = [
            [{ text: '–£–¥–∞–ª–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç', callback_data: `deleteDoc_${options.data}`}],
            [{ text: 'üè° –ù–∞–∑–∞–¥', callback_data: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã'}]
          ]
          Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': key });
          return;
        }
      }
    }

    if (options.data.includes('deleteDoc')) { //—É–¥–∞–ª–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞ –∏–∑ –º–µ–Ω—é –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –¥–æ –ø–æ–¥–∞—á–∏ –∑–∞—è–≤–∫–∏
      let ur = search_row(options.chat_id, 'users', 2);
      let dcol = search_col(options.data.split('_')[1], 'users', 1);
      setSheetVal('users', ur, dcol, null);
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: `‚úÖ–î–æ–∫—É–º–µ–Ω—Ç —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.` });
      Bot.deleteMessage(options.message_id);
      msg = `‚úÖ–î–æ–∫—É–º–µ–Ω—Ç: <b>${userData.callback_query_data.split('_')[1]}</b> —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª—ë–Ω.`;
      Bot.sendMessage(msg);
      msg2 = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –¥–æ–∫—É–º–µ–Ω—Ç –∏–∑ –ø—Ä–∏–≤–µ–¥—ë–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞üëá</b>';
      userProperties.setProperty(options.chat_id, JSON.stringify({callback_query_data: '–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã'}));
      Bot.sendMessage(msg2, {'reply_markup': getkeyFlags(options.chat_id, return_key = "menu_start")});
      return;
    }

    if (options.data === 'delete'){
      Bot.deleteMessage(TelegramJSON.callback_query.message.message_id);
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      return;
    }

    if (options.data.includes('DownloadDocs')) { //–≤—ã–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      Bot.sendChatAction();
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id });
      let userID = options.data.split('_')[1];
      let ind = search_row(userID, 'users', 2); //–∏–Ω–¥–µ–∫—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
      let usersDocs = Sheet('users').getRange(ind, 11, 1, Sheet('Users').getLastColumn()-10).getValues().flat();
      let data1 = Sheet('users').getRange(1, 11, 1, Sheet('Users').getLastColumn()-10).getValues().flat();
      Bot.sendMessage("<b>–ù–∞—á–∞–ª–æ –≤—ã–≥—Ä—É–∑–∫–∏ –¥–ª—è <a href='tg://user?id=" + userID +"'>" + [Bot.getSystemUser(userID).firstName +' '+Bot.getSystemUser(userID).lastName] + "</a></b>");
      for (let i = 0; i < usersDocs.length; i++) {
        if (usersDocs[i]) {
          msg = "<b>" + data1[i] + "</b> <a href='tg://user?id=" + userID +"'><b>" + [Bot.getSystemUser(userID).firstName +' '+Bot.getSystemUser(userID).lastName] + "</b></a>";
          try{
            Bot.sendPhoto(msg, usersDocs[i]);
          }
          catch{
            Bot.sendDocument(msg, usersDocs[i]);
          }
        }
      }
      Bot.sendMessage("<b>–í—ã–≥—Ä—É–∑–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è <a href='tg://user?id=" + userID +"'>" + [Bot.getSystemUser(userID).firstName +' '+Bot.getSystemUser(userID).lastName] + "</a></b>");
      return;
    }

                 /*                          –î–û–ü–û–õ–ù–ò–¢–ï–õ–¨–ù–´–ï –§–£–ù–ö–¶–ò–ò                           */

    if (getDataColumnSheet('Instructions').includes(options.data)) {//–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤—ã–±—Ä–∞–ª –º–∞—Ç–µ—Ä–∏–∞–ª –≤ –±–æ—Ç–µ
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: options.data});
      
      if (userData.callback_query_data === '–£–¥–∞–ª–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª') {//–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∂–µ–ª–∞–µ—Ç —É–¥–∞–ª–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–£–¥–∞–ª—è—é –º–∞—Ç–µ—Ä–∏–∞–ª'});
        Sheet("Instructions").deleteRow(search_row(options.data, "Instructions", 1));
        let data = getDataColumnSheet("Instructions");
        msg = '–í—ã–±–µ—Ä–∏ –º–∞—Ç–µ—Ä–∏–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –í—ã —Ö–æ—Ç–∏—Ç–µ <b>—É–¥–∞–ª–∏—Ç—å</b>üëá';
        Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(data, undefined, return_key = 'menu_start').keyboard);
        return;
      }
      
      if(userData.callback_query_data === 'Instructions'){
        //Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–ü–æ–∏—Å–∫ –º–∞—Ç–µ—Ä–∏–∞–ª–∞'});
        let row = search_row(options.data, 'Instructions', 1);
        let lastpost = Sheet('Instructions').getRange(row, 1, 1,  4).getValues()[0];
        Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
        msg = '<b>üîé' + lastpost[0] + '</b>' + '\n\n'+ lastpost[1];
        if (lastpost[3] == '–¢–µ–∫—Å—Ç') {
          Bot.editMessageKeyboard(msg, options.message_id, null, {'inline_keyboard': menu[7]}, {'disable_web_page_preview': false});
          return;
        }
        if (lastpost[3] == '–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ') {
          Bot.deleteMessage(options.message_id);
          Bot.sendPhoto(msg, lastpost[2], menu[7], {'disable_web_page_preview': false});
          return;
        }
        if (lastpost[3] == '–í–∏–¥–µ–æ') {
          Bot.deleteMessage(options.message_id);
          Bot.sendVideo(msg, lastpost[2], menu[7], {'disable_web_page_preview': false});
          return;
        }
        if (lastpost[3] == '–ê—É–¥–∏–æ') {
          Bot.deleteMessage(options.message_id);
          Bot.sendAudio(msg, lastpost[2], menu[7], {'disable_web_page_preview': false});
          return;
        }
        if (lastpost[3] == '–î–æ–∫—É–º–µ–Ω—Ç') {
          Bot.deleteMessage(options.message_id);
          Bot.sendDocument(msg, lastpost[2], menu[7], {'disable_web_page_preview': false});
          return;
        }
      }
    }

    if (options.data.includes('user') ) {//–∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      if (options.data.includes('approve') ) {//–ø—Ä–∏–Ω—è—Ç–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        let idn = options.data.split('_')[2];
        Bot.authSystemUser(idn, true)
        msg  = "<i>–í—ã –±—ã–ª–∏ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.</i> –ü—Ä–∏—è—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!";
        msg2 = "–ó–∞–ø—Ä–æ—Å –æ—Ç <a href='tg://user?id="+options.data.split('_')[2] + "'>"+options.data.split('_')[2]+"</a> –±—ã–ª <b>–æ–¥–æ–±—Ä–µ–Ω</b> –≤–∞–º–∏.";
        Bot.sendMessage(msg, { chat_id: options.data.split('_')[2] });
        Bot.sendMessage(welcome_msg, { chat_id: options.data.split('_')[2] });
      }
      if ( options.data.includes('deny') ) {//–æ—Ç–∫–ª–æ–Ω–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
        Bot.authSystemUser(options.data.split('_')[2], false);
        msg  = "<i>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –í–∞—à –∑–∞–ø—Ä–æ—Å –±—ã–ª –æ—Ç–∫–ª–æ–Ω–µ–Ω!</i>";
        msg2 = "–ó–∞–ø—Ä–æ—Å –æ—Ç <a href='tg://user?id="+options.data.split('_')[2] + "'>"+options.data.split('_')[2]+"</a> –±—ã–ª <b>–æ—Ç–∫–ª–æ–Ω–µ–Ω</b> –≤–∞–º–∏.";
        Bot.sendMessage(msg, { chat_id: options.data.split('_')[2] });
      }
      Bot.editMessageText(msg2, options.message_id);
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
      return;
    }

    if (options.data.includes('page')) {//–µ—Å–ª–∏ –Ω–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–µ—Ä–µ–ª–∏—Å—Ç–Ω—É—Ç—å —Å—Ç—Ä–∞–Ω–∏—Ü—É –≤ –ª—é–±–æ–º –∏–∑ —Å–ø–∏—Å–∫–æ–≤
      let page = options.data.substr(5);
      let x = userData.callback_query_data;
      Bot.request('answerCallbackQuery', { callback_query_id: cb.id });
      switch(x) {
        
        case '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã':
          msg = '<b>–í—ã–±–µ—Ä–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –í—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å</b>üëá';
          data = getDataUsers("users");
          Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(data, page, return_key = "menu_start").keyboard);
          break;
        
        case 'sendAllmsgTo':
          msg = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä–æ–π –í—ã —Ö–æ—Ç–∏—Ç–µ <b>–æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ</b>üëá';
          data = getDataColumnSheet('Test');
          Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(data, page, return_key = 'sendmsg').keyboard);
          break;

        case 'Instructions':
          msg = '<b>–í—ã–±–µ—Ä–∏—Ç–µ –ª—é–±—É—é —Å—Ç–∞—Ç—å—é –∏–∑ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω–æ–≥–æ –Ω–∏–∂–µ —Å–ø–∏—Å–∫–∞</b>üëá';
          data = getDataColumnSheet('Instructions');
          Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(data, page, return_key = 'Information').keyboard, {'disable_web_page_preview': true});
          break;

        case '–£–¥–∞–ª–∏—Ç—å –∫–∞—Ç–µ–≥–æ—Ä–∏—é':
          msg = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ <b>—É–¥–∞–ª–∏—Ç—å</b>üëá';
          data = getDataColumnSheet('Test');
          Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(data, page, return_key = "Functions").keyboard);
          break;
        
        case 'setCategory':
          msg = '–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, –∫–æ—Ç–æ—Ä—É—é –í—ã —Ö–æ—Ç–∏—Ç–µ <b>—É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å</b>üëá';
          data = getDataColumnSheet('Test');
          Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(data, page, return_key = "Functions").keyboard);
          break;
        
        case '–£–¥–∞–ª–∏—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª':
          msg = '–í—ã–±–µ—Ä–∏ –º–∞—Ç–µ—Ä–∏–∞–ª, –∫–æ—Ç–æ—Ä—ã–π –í—ã —Ö–æ—Ç–∏—Ç–µ <b>—É–¥–∞–ª–∏—Ç—å</b>üëá';
          data = getDataColumnSheet('Instructions');
          Bot.editMessageKeyboard(msg, options.message_id, null, keySheets(data, page, return_key = "Functions").keyboard);
          break;
      
        default:
          Bot.request('answerCallbackQuery', { callback_query_id: cb.id, text: '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –∫–∞–∫–∞—è-—Ç–æ –æ—à–∏–±–∫–∞'});//–æ—Ç–≤–µ—Ç–Ω—ã–π –∑–∞–ø—Ä–æ—Å, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –∑–∞—Ü–∏–∫–ª–∏–≤–∞–Ω–∏–π
          break;
      }
      return;
    }
  }

  else{//–µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω –≤ –±–æ—Ç–µ
    msg = "–í—ã –Ω–µ –∑–∞—Ä–µ–≥–µ—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã. \n<i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –Ω–∞–∂–º–∏—Ç–µ /addme, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –∑–∞–ø—Ä–æ—Å –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é.</i>";
    Bot.sendMessage(msg);
    Bot.request('answerCallbackQuery', { callback_query_id: cb.id});
    return;
  }
}
